[buildout]
# Add eggs directory in RAMdisk for better performance
#eggs-directory = /home/sneridagh/ramdisk/eggs
#eggs-directory = /Volumes/ramdisk/eggs

parts =
    filestorage
    instance
    omelette
    test
    ipzope

# Change the number here to change the version of Plone being used
extends =
    http://dist.plone.org/release/4.2-latest/versions.cfg
    versions.cfg
versions = versions

# UPC Pypi mirror just in case
#index = http://pypi.upc.edu/mirror

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://pypi.upc.edu/links
    http://dist.plone.org/release/4.2-latest
    http://dist.plone.org/thirdparty

# Add additional eggs here (develop and experimental)
eggs =  plone.reload

# Uncomment to activate debug packages
#        plone.app.debugtoolbar

genwebeggs= upc.genwebupc
            upc.genwebupctheme
            genweb.core
            genweb.theme
            genweb.controlpanel
            genweb.stack
            genweb.portlets
            upc.genweb.banners
            upc.genweb.logosfooter
            upc.genweb.descriptorTIC
            upc.genweb.kbpuc
            upc.genweb.meetings
            upc.genweb.objectiusCG
            upc.genweb.serveis
            upc.genweb.soa
            upc.cloudPrivat
            upcnet.simpleTask
            upcnet.stats
            upcnet.cas
            Products.AJAXAddRemoveWidget
            Products.PloneSurvey

# Experimental
#            plone.app.multilingual
#            plone.multilingual
#            plone.multilingualbehavior
#            archetypes.multilingual


# Auto checkout via eggs dependencies
#        collective.collage.ploneformgen
#        suds
#        Products.Collage
#        Products.Ploneboard
#        Products.PloneFormGen
#        Products.PlonePopoll
#        Products.Poi
#        Products.windowZ

develop =

extensions = mr.developer

auto-checkout = ${buildout:genwebeggs}
# Experimental
#                plone.app.multilingual
#                plone.multilingual
#                plone.multilingualbehavior
#                archetypes.multilingual

[sources]
genweb.core = git git@github.com:UPCnet/genweb.core.git branch=4.2
genweb.theme = git  git@github.com:UPCnet/genweb.theme.git branch=develop
genweb.controlpanel = git git@github.com:UPCnet/genweb.controlpanel.git branch=develop
genweb.stack = git git@github.com:UPCnet/genweb.stack.git branch=develop
genweb.portlets = git git@github.com:UPCnet/genweb.portlets.git branch=develop
upc.genwebupc = git git@github.com:UPCnet/upc.genwebupc.git branch=4.2
upc.genwebupctheme = git git@github.com:UPCnet/upc.genwebupctheme.git branch=4.2
upc.genweb.banners = git git@github.com:UPCnet/upc.genweb.banners.git branch=develop
upc.genweb.logosfooter = git git@github.com:UPCnet/upc.genweb.logosfooter.git branch=develop
upc.genweb.descriptorTIC = git git@github.com:UPCnet/upc.genweb.descriptorTIC.git branch=develop
upc.genweb.kbpuc = git git@github.com:UPCnet/upc.genweb.kbpuc.git branch=develop
upc.genweb.meetings = git git@github.com:UPCnet/upc.genweb.meetings.git branch=develop
upc.genweb.objectiusCG = git git@github.com:UPCnet/upc.genweb.objectiusCG.git branch=develop
upc.genweb.serveis = git git@github.com:UPCnet/upc.genweb.serveis.git branch=develop
upc.genweb.soa = git git@github.com:UPCnet/upc.genweb.soa.git branch=develop
upcnet.simpleTask = git git@github.com:UPCnet/upcnet.simpleTask.git branch=develop
upcnet.stats = git git@github.com:UPCnet/upcnet.stats.git branch=develop
upcnet.cas = git git@github.com:UPCnet/upcnet.cas.git branch=develop
upc.cloudPrivat = git git@github.com:UPCnet/upc.cloudPrivat.git branch=develop
Products.AJAXAddRemoveWidget = git git@github.com:UPCnet/Products.AJAXAddRemoveWidget.git branch=develop
Products.windowZ = git git@github.com:collective/Products.windowZ.git
Products.Collage = svn http://svn.plone.org/svn/collective/Products.Collage/trunk
collective.collage.ploneformgen = svn http://svn.plone.org/svn/collective/Products.Collage/addons/collective.collage.ploneformgen/trunk
Products.PlonePopoll = svn http://svn.plone.org/svn/collective/Products.PlonePopoll/trunk
Products.Poi = git git@github.com:collective/Products.Poi.git
Products.PloneSurvey = git git@github.com:UPCnet/Products.PloneSurvey.git branch=develop
Products.Ploneboard = svn http://svn.plone.org/svn/collective/Products.Ploneboard/trunk
translations = git git@github.com:UPCnet/translations.gi egg=false branch=develop

plone.app.multilingual = git git@github.com:plone/plone.app.multilingual.git
plone.multilingual = git git@github.com:plone/plone.multilingual.git
plone.multilingualbehavior = git git@github.com:plone/plone.multilingualbehavior.git
archetypes.multilingual = git git@github.com:plone/archetypes.multilingual.git

[filestorage]
# For enable ZODB mount points in the development buildout
# for testing and debug purposes
recipe = collective.recipe.filestorage
parts = comunicacio
        espaitic
        serveisticalaupc
        euetit
        deq
location = var/filestorage/Data_%(fs_part_name)s.fs
blob-storage = var/blobstorage/%(fs_part_name)s

[instance]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = on
blob-storage = var/blobstorage
#effective-user = plone
python-check-interval = 1800
eggs =
    Zope2
    Pillow
    Plone
    ${buildout:eggs}
    ${buildout:genwebeggs}
environment-vars =
    PTS_LANGUAGES en es ca zh
    zope_i18n_allowed_languages en es ca zh
    zope_i18n_compile_mo_files true
zcml =
products =
    ${buildout:directory}/products
zope-conf-additional =
    <product-config genwebconfig>
        zeo 1
    </product-config>

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
       ${buildout:genwebeggs}

[test]
recipe = zc.recipe.testrunner
defaults = ['-v', '--auto-color', '--auto-progress',]
eggs =
    ${instance:eggs}
    ${buildout:genwebeggs}
    genweb.core[test]
    genweb.theme[test]
    Products.LinguaPlone
    Products.PloneLDAP

[ipzope]
recipe = zc.recipe.egg
eggs =
    ipython
    ${instance:eggs}
initialization =
    import sys, os
    os.environ["INSTANCE_HOME"] = "${instance:location}"
    sys.argv[1:1] = "-p zope".split()
scripts = ipython=ipzope
